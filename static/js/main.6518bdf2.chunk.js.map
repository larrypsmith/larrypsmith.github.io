{"version":3,"sources":["images/Larry_Smith.jpg","images/golden-gate.jpg","images/bitter.png","images/plotify.png","images/thought-board.png","components/Portrait.jsx","components/AboutMe.jsx","components/Overlay.jsx","components/BackgroundImage.jsx","components/Greeting.jsx","data.js","components/Project.jsx","components/ProjectList.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","boxShadow","shadows","breakpoints","down","width","height","top","marginBottom","up","Portrait","classes","Avatar","src","larrySmith","className","card","overflow","cardContent","paddingTop","portrait","position","AboutMe","Card","Grid","container","justify","spacing","item","CardContent","Typography","variant","align","gutterBottom","paragraph","bottom","right","left","backgroundColor","Overlay","zIndex","image","objectFit","BackgroundImage","goldenGate","alt","color","palette","primary","contrastText","padding","Greeting","Container","maxWidth","projects","bitter","title","subtitle","description","website","gitHub","thoughtBoard","plotify","GitHubIcon","LinkedInIcon","Link","href","underline","CardActionArea","CardMedia","component","CardActions","Button","size","startIcon","header","ProjectList","Fragment","Object","values","map","project","i","key","xs","sm","lg","Project","gridContainer","App","StylesProvider","injectFirst","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6518bdf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Larry_Smith.69afc1f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/golden-gate.a7d0a402.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bitter.7955a900.png\";","module.exports = __webpack_public_path__ + \"static/media/plotify.a9ead9e9.png\";","module.exports = __webpack_public_path__ + \"static/media/thought-board.fb2e67c8.png\";","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport larrySmith from '../images/Larry_Smith.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: theme.shadows[4],\n    [theme.breakpoints.down('sm')]: {\n      width: '150px',\n      height: '150px',\n      top: '-75px',\n      marginBottom: '-50px'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '200px',\n      height: '200px',\n      top: '-100px',\n      marginBottom: '-75px'\n    }\n  }\n}));\n\nconst Portrait = () => {\n  const classes = useStyles();\n\n  return (\n    <Avatar\n      src={larrySmith}\n      className={classes.root}\n    />\n  )\n};\n\nexport default Portrait;","import React from 'react';\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Portrait from './Portrait';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    overflow: 'visible'\n  },\n  cardContent: {\n    paddingTop: 0\n  },\n  portrait: {\n    position: 'relative',\n  }\n})\n\nconst AboutMe = () => {\n  const classes = useStyles();\n  \n  return(\n      <Card className={classes.card}>\n        <Grid container\n          justify=\"center\"\n          className={classes.portrait}\n          spacing={0}\n        >\n          <Grid item>\n            <Portrait />\n          </Grid>\n        </Grid>\n        <CardContent className={classes.cardContent}>\n          <Typography\n            variant=\"h2\"\n            align=\"center\"\n            gutterBottom\n            >\n            About Me\n          </Typography>\n\n          <Typography\n            variant=\"h5\"\n            paragraph\n            >\n            I am a software engineer living in San Francisco.\n            I love to build products from the ground up.\n            My ongoing projects include an Untappd clone,\n            an image-based note-taking web app built on the MERN stack,\n            and a JavaScript web app that visualizes Spotify user data.\n          </Typography>\n        </CardContent>\n      </Card>\n  )\n};\n\nexport default AboutMe;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.3)'\n  }\n})\n\nconst Overlay = () => {\n  const classes = useStyles();\n\n  return(\n    <div className={classes.root} />\n  )\n};\n\nexport default Overlay;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport goldenGate from '../images/golden-gate.jpg'\nimport Overlay from './Overlay';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    zIndex: -1\n  },\n  image: {\n    objectFit: 'cover',\n    width: '100vw',\n    height: '100vh',\n  }\n})\n\nconst BackgroundImage = () => {\n  const classes = useStyles();\n  \n  return(\n    <div className={classes.root}>\n      <Overlay />\n      <img\n        className={classes.image}\n        src={goldenGate}\n        alt='golden-gate.jpg'\n      />\n    </div>\n  )\n};\n\nexport default BackgroundImage;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: theme.palette.primary.contrastText,\n    position: 'relative',\n    padding: theme.spacing(20, 0)\n  }\n}));\n\nconst Greeting = () => {\n  const classes = useStyles();\n  \n  return(\n    <Container maxWidth=\"sm\" className={classes.root}>\n      <Typography\n        variant=\"h1\"\n        align=\"center\"\n        gutterBottom\n      >\n        Hi, I'm Larry.\n      </Typography>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n      >\n        I'm a software engineer who develops web applications with React, Redux, and Ruby on Rails.\n      </Typography>\n    </Container>\n  )\n};\n\nexport default Greeting;","import bitter from './images/bitter.png';\nimport plotify from './images/plotify.png';\nimport thoughtBoard from './images/thought-board.png';\nimport AngelListIcon from './components/AngelListIcon';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nexport const projects = {\n  bitter: {\n    title: \"Bitter\",\n    subtitle: \"An Untappd Clone\",\n    description: \"Bitter is a social media web app where users rate, review and discuss beer. It is a clone of Untappd.\",\n    image: bitter,\n    website: \"https://bitterapp.herokuapp.com/#/\",\n    gitHub: \"https://github.com/larrypsmith/Bitter\"\n  },\n  thoughtBoard: {\n    title: \"ThoughtBoard\",\n    subtitle: \"An Image-Based Note-Taking Web App\",\n    description: \"ThoughtBoard is a note-taking web app that lets users drag notes around the screen and organize them as desired.\",\n    image: thoughtBoard,\n    website: \"https://thought-board-labs.herokuapp.com/#/profile\",\n    gitHub: \"https://github.com/larrypsmith/thought-board\"\n  },\n  plotify: {\n    title: \"Plotify\",\n    subtitle: \"A personalized Spotify data visualizer\",\n    description: \"Plotify visualizes your top Spotify artists and genres in a circle-packing chart that shows their relationships.\",\n    image: plotify,\n    website: \"https://larrypsmith.github.io/plotify/\",\n    gitHub: \"https://github.com/larrypsmith/plotify\"\n  }\n}\n\nexport const social = {\n  gitHub: {\n    name: \"GitHub\",\n    url: \"https://github.com/larrypsmith\",\n    icon: GitHubIcon\n  },\n  linkedIn: {\n    name: \"LinkedIn\",\n    url: \"https://www.linkedin.com/in/larrypaulsmith/\",\n    icon: LinkedInIcon\n  },\n  angelList: {\n    name: \"AngelList\",\n    url: \"https://angel.co/u/larry-paul-smith\",\n    icon: AngelListIcon\n  }\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport WebIcon from '@material-ui/icons/Web';\n\nexport default ({ title, description, image, website, gitHub }) => (\n  <Card>\n    <Link href={website} underline=\"none\">\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          image={image}\n          height={250}\n        />\n      </CardActionArea>\n    </Link>\n    <CardContent>\n      <Typography variant=\"h4\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"body1\">\n        {description}\n      </Typography>\n    </CardContent>\n    <CardActions>\n      <Link href={website} underline=\"none\">\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          size=\"small\"\n          startIcon={<WebIcon />}\n          >\n          Live Site\n        </Button>\n      </Link>\n      <Link href={gitHub} underline=\"none\">\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          size=\"small\"\n          startIcon={<GitHubIcon />}\n          >\n          GitHub\n        </Button>\n      </Link>\n    </CardActions>\n  </Card>\n)","import React from 'react';\nimport { projects } from '../data';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Project from './Project';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    color: theme.palette.primary.contrastText,\n    marginBottom: theme.spacing(5)\n  }\n}))\n\nconst ProjectList = () => {\n  const classes = useStyles();\n  \n  return(\n    <React.Fragment>\n      <Typography\n        variant=\"h2\"\n        align=\"center\"\n        gutterBottom\n        className={classes.header}\n      >\n        Projects\n      </Typography>\n      \n      <Grid container spacing={4}>\n        {\n          Object.values(projects).map((project, i) => (\n            <Grid\n              item\n              key={i}\n              xs={12}\n              sm={6}\n              lg={4}\n            >\n              <Project\n                title={project.title}\n                description={project.description}\n                image={project.image}\n                website={project.website}\n                gitHub={project.gitHub}\n              />\n            </Grid>\n          ))\n        }\n      </Grid>\n    </React.Fragment>\n  )\n};\n\nexport default ProjectList;","import React from 'react';\nimport AboutMe from './AboutMe';\nimport BackgroundImage from './BackgroundImage';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Greeting from './Greeting'\nimport Grid from '@material-ui/core/Grid';\nimport ProjectList from './ProjectList';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    '& > *:not(:last-child)': {\n      marginBottom: theme.spacing(20)\n    }\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <StylesProvider injectFirst>\n      <CssBaseline />\n      <BackgroundImage />\n      <Container maxWidth=\"lg\">\n        <Greeting />\n        <Grid container className={classes.gridContainer}>\n          <Grid item>\n            <AboutMe />\n          </Grid>\n          <Grid item>\n            <ProjectList />\n          </Grid>\n        </Grid>\n      </Container>\n    </StylesProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}