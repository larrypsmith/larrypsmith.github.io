{"version":3,"sources":["images/golden-gate.jpg","images/Larry_Smith.jpg","images/bitter.png","images/plotify.png","images/thought-board.png","components/AboutMe.jsx","components/Overlay.jsx","components/GreetingBanner.jsx","components/HeadShot.jsx","components/Project.jsx","data.js","components/ProjectList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","Container","maxWidth","Typography","variant","align","gutterBottom","paragraph","useStyles","makeStyles","root","position","top","bottom","right","left","backgroundColor","Overlay","classes","className","theme","backgroundImage","goldenGate","backgroundSize","backgroundPosition","text","color","palette","primary","contrastText","padding","GreetingBanner","Paper","boxShadow","shadows","breakpoints","down","width","height","up","HeadShot","Avatar","src","larrySmith","title","description","image","website","gitHub","Card","Link","href","underline","CardActionArea","CardMedia","component","CardContent","CardActions","Button","size","projects","bitter","subtitle","thoughtBoard","plotify","ProjectList","GitHubIcon","LinkedInIcon","Fragment","Grid","container","spacing","Object","values","map","project","i","item","key","xs","sm","Project","App","StylesProvider","injectFirst","CssBaseline","justify","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,kLC2B5BC,EAvBC,kBACd,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,SACNC,cAAY,GAHd,YAOA,kBAACH,EAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,SACNE,WAAS,GAHX,0Q,wBCVEC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,gBAAiB,wBAYNC,EARC,WACd,IAAMC,EAAUV,IAEhB,OACE,yBAAKW,UAAWD,EAAQR,Q,yBCVtBF,EAAYC,aAAW,SAAAW,GAAK,MAAK,CACrCV,KAAM,CACJC,SAAU,WACVU,gBAAgB,OAAD,OAASC,IAAT,KACfC,eAAgB,QAChBC,mBAAoB,UAEtBC,KAAM,CACJC,MAAON,EAAMO,QAAQC,QAAQC,aAC7BlB,SAAU,WACVmB,QAAS,eA8BEC,EA1BQ,WACrB,IAAMb,EAAUV,IAEhB,OACE,kBAACwB,EAAA,EAAD,CAAOb,UAAWD,EAAQR,MACxB,kBAAC,EAAD,MACA,kBAACT,EAAA,EAAD,CAAWC,SAAS,KAAKiB,UAAWD,EAAQO,MAC1C,kBAACtB,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,SACNC,cAAY,GAHd,kBAOA,kBAACH,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,UAFR,kG,iCC/BFG,EAAYC,aAAW,SAAAW,GAAK,YAAK,CACrCV,MAAI,GACFuB,UAAWb,EAAMc,QAAQ,IADvB,cAEDd,EAAMe,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,QACPC,OAAQ,QACR1B,IAAK,UALL,cAODQ,EAAMe,YAAYI,GAAG,MAAQ,CAC5BF,MAAO,QACPC,OAAQ,QACR1B,IAAK,WAVL,OA0BS4B,EAXE,WACf,IAAMtB,EAAUV,IAEhB,OACE,kBAACiC,EAAA,EAAD,CACEC,IAAKC,IACLxB,UAAWD,EAAQR,Q,wDCfV,kBAAGkC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,QAASC,EAAvC,EAAuCA,OAAvC,OACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,KAAMJ,EAASK,UAAU,QAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVT,MAAOA,EACPR,OAAQ,QAId,kBAACkB,EAAA,EAAD,KACE,kBAACrD,EAAA,EAAD,CAAYC,QAAQ,MACjBwC,GAEH,kBAACzC,EAAA,EAAD,CAAYC,QAAQ,SACjByC,IAGL,kBAACY,EAAA,EAAD,KACE,kBAACP,EAAA,EAAD,CAAMC,KAAMJ,EAASK,UAAU,QAC7B,kBAACM,EAAA,EAAD,CAAQhC,MAAM,UAAUiC,KAAK,SAA7B,YAIF,kBAACT,EAAA,EAAD,CAAMC,KAAMH,EAAQI,UAAU,QAC5B,kBAACM,EAAA,EAAD,CAAQhC,MAAM,UAAUiC,KAAK,SAA7B,c,6FC/BKC,EAAW,CACtBC,OAAQ,CACNjB,MAAO,SACPkB,SAAU,mBACVjB,YAAa,wGACbC,MAAOe,IACPd,QAAS,qCACTC,OAAQ,yCAEVe,aAAc,CACZnB,MAAO,eACPkB,SAAU,qCACVjB,YAAa,mHACbC,MAAOiB,IACPhB,QAAS,qDACTC,OAAQ,gDAEVgB,QAAS,CACPpB,MAAO,UACPkB,SAAU,yCACVjB,YAAa,mHACbC,MAAOkB,IACPjB,QAAS,yCACTC,OAAQ,2CCIGiB,GDILC,IAKAC,ICrCU,kBAClB,kBAAC,IAAMC,SAAP,KACE,kBAACjE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,cAAY,GAApD,eAGA,kBAAC+D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAErBC,OAAOC,OAAOb,GAAUc,KAAI,SAACC,EAASC,GAAV,OAC1B,kBAACP,EAAA,EAAD,CACEQ,MAAI,EACJC,IAAKF,EACLG,GAAI,GACJC,GAAI,GAEJ,kBAACC,EAAD,CACErC,MAAO+B,EAAQ/B,MACfC,YAAa8B,EAAQ9B,YACrBC,MAAO6B,EAAQ7B,MACfC,QAAS4B,EAAQ5B,QACjBC,OAAQ2B,EAAQ3B,iB,QCIfkC,G,MAlBH,WACV,OACE,kBAACC,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAChB,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAQ,UACtB,kBAACjB,EAAA,EAAD,CAAMQ,MAAI,GACR,kBAAC,EAAD,QAGJ,kBAAC5E,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,UCXYsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8c9fdb7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/golden-gate.a7d0a402.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Larry_Smith.69afc1f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bitter.7955a900.png\";","module.exports = __webpack_public_path__ + \"static/media/plotify.a9ead9e9.png\";","module.exports = __webpack_public_path__ + \"static/media/thought-board.fb2e67c8.png\";","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nconst AboutMe = () => (\n  <Container maxWidth=\"sm\">\n    <Typography\n      variant=\"h3\"\n      align=\"center\"\n      gutterBottom\n    >\n      About Me\n    </Typography>\n    <Typography\n      variant=\"body1\"\n      align=\"center\"\n      paragraph\n    >\n      I am a software engineer living in San Francisco.\n      I love to build products from the ground up.\n      My ongoing projects include an Untappd clone,\n      an image-based note-taking web app built on the MERN stack,\n      and a JavaScript web app that visualizes Spotify user data.\n    </Typography>\n  </Container>\n);\n\nexport default AboutMe;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.3)'\n  }\n})\n\nconst Overlay = () => {\n  const classes = useStyles();\n\n  return(\n    <div className={classes.root} />\n  )\n};\n\nexport default Overlay;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Overlay from './Overlay';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport goldenGate from '../images/golden-gate.jpg'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    backgroundImage: `url(${goldenGate})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  text: {\n    color: theme.palette.primary.contrastText,\n    position: 'relative',\n    padding: '10rem 0'\n  }\n}));\n\nconst GreetingBanner = () => {\n  const classes = useStyles();\n  \n  return(\n    <Paper className={classes.root}>\n      <Overlay />\n      <Container maxWidth=\"sm\" className={classes.text}>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          gutterBottom\n        >\n          Hi, I'm Larry.\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n        >\n          {/* I'm testing something */}\n          I'm a software engineer who develops web applications with React, Redux, and Ruby on Rails.\n        </Typography>\n      </Container>\n    </Paper>\n  )\n};\n\nexport default GreetingBanner;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport larrySmith from '../images/Larry_Smith.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: theme.shadows[4],\n    [theme.breakpoints.down('sm')]: {\n      width: '150px',\n      height: '150px',\n      top: '-75px'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '200px',\n      height: '200px',\n      top: '-100px'\n    }\n  }\n}));\n\nconst HeadShot = () => {\n  const classes = useStyles();\n\n  return (\n    <Avatar\n      src={larrySmith}\n      className={classes.root}\n    />\n  )\n};\n\nexport default HeadShot;","import React from 'react';\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n  CardContent,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nexport default ({ title, description, image, website, gitHub }) => (\n  <Card>\n    <Link href={website} underline=\"none\">\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          image={image}\n          height={250}\n        />\n      </CardActionArea>\n    </Link>\n    <CardContent>\n      <Typography variant=\"h5\">\n        {title}\n      </Typography>\n      <Typography variant=\"body1\">\n        {description}\n      </Typography>\n    </CardContent>\n    <CardActions>\n      <Link href={website} underline=\"none\">\n        <Button color=\"primary\" size=\"small\">\n          Website\n        </Button>\n      </Link>\n      <Link href={gitHub} underline=\"none\">\n        <Button color=\"primary\" size=\"small\">\n          GitHub\n        </Button>\n      </Link>\n    </CardActions>\n  </Card>\n)","import bitter from './images/bitter.png';\nimport plotify from './images/plotify.png';\nimport thoughtBoard from './images/thought-board.png';\nimport AngelListIcon from './components/AngelListIcon';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nexport const projects = {\n  bitter: {\n    title: \"Bitter\",\n    subtitle: \"An Untappd Clone\",\n    description: \"Bitter is a social media web app where users rate, review and discuss beer. It is a clone of Untappd.\",\n    image: bitter,\n    website: \"https://bitterapp.herokuapp.com/#/\",\n    gitHub: \"https://github.com/larrypsmith/Bitter\"\n  },\n  thoughtBoard: {\n    title: \"ThoughtBoard\",\n    subtitle: \"An Image-Based Note-Taking Web App\",\n    description: \"ThoughtBoard is a note-taking web app that lets users drag notes around the screen and organize them as desired.\",\n    image: thoughtBoard,\n    website: \"https://thought-board-labs.herokuapp.com/#/profile\",\n    gitHub: \"https://github.com/larrypsmith/thought-board\"\n  },\n  plotify: {\n    title: \"Plotify\",\n    subtitle: \"A personalized Spotify data visualizer\",\n    description: \"Plotify visualizes your top Spotify artists and genres in a circle-packing chart that shows their relationships.\",\n    image: plotify,\n    website: \"https://larrypsmith.github.io/plotify/\",\n    gitHub: \"https://github.com/larrypsmith/plotify\"\n  }\n}\n\nexport const social = {\n  gitHub: {\n    name: \"GitHub\",\n    url: \"https://github.com/larrypsmith\",\n    icon: GitHubIcon\n  },\n  linkedIn: {\n    name: \"LinkedIn\",\n    url: \"https://www.linkedin.com/in/larrypaulsmith/\",\n    icon: LinkedInIcon\n  },\n  angelList: {\n    name: \"AngelList\",\n    url: \"https://angel.co/u/larry-paul-smith\",\n    icon: AngelListIcon\n  }\n};","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Project from './Project';\nimport Typography from '@material-ui/core/Typography';\nimport { projects } from '../data';\n\nconst ProjectList = () => (\n  <React.Fragment>\n    <Typography variant=\"h3\" align=\"center\" gutterBottom>\n      My Projects\n    </Typography>\n    <Grid container spacing={4}>\n      {\n        Object.values(projects).map((project, i) => (\n          <Grid\n            item\n            key={i}\n            xs={12}\n            sm={4}\n          >\n            <Project\n              title={project.title}\n              description={project.description}\n              image={project.image}\n              website={project.website}\n              gitHub={project.gitHub}\n            />\n          </Grid>\n        ))\n      }\n    </Grid>\n  </React.Fragment>\n);\n\nexport default ProjectList;","import React from 'react';\nimport AboutMe from './components/AboutMe';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid'\nimport GreetingBanner from './components/GreetingBanner'\nimport HeadShot from './components/HeadShot';\nimport ProjectList from './components/ProjectList';\nimport { StylesProvider } from '@material-ui/core/styles'\nimport './App.css';\n\nconst App = () => {\n  return (\n    <StylesProvider injectFirst>\n      <CssBaseline />\n      <GreetingBanner />\n      <Grid container justify=\"center\">\n        <Grid item>\n          <HeadShot />\n        </Grid>\n      </Grid>\n      <Container>\n        <AboutMe />\n        <ProjectList />\n      </Container>\n    </StylesProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}